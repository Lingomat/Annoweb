This is a description of the files and directory structure of the Annoweb alpha 2 web app.

Note: Code changes are described in the changes tab in the main view.

Root files:
-----------
*bower.json - client-side dependencies specified here.
*gulpfile.js - Gulp file describes tasks for building, cleaning, etc. Currently this only specifies a way to obtain the wavesurfer library from source. It will ultimately be responsible for bundling and minifying all the scripts, running jslint and so on.
*package.json - node.js 'install', describes the dependencies to execute the gulpfile.js build file
index.html - The webapp main html, includes all of the javascript. Should be served from a web server for debugging, e.g. python -m http.server or an IDE. This file is generated by the gulp 'build' task
             from src/index.html - dependencies are automatically injected. It will include unminified sources from the src directory and libraries from bower_components

Directories:
------------
*bower_components/ - this is a source tree for all dependencies. Very little of this is used in the build.
*node_modules/ - node.js source modules. Unnecessary to run web app. (node install will build this locally)
dis/t - deployed app appears in this folder, generated by gulp 'deploy' task. Folder can be added as unpacked Chrome web app, or deployed to web server.
chromeapp/ - Files copied into dist to support chrome app [folder contents copied to dist]
extdata/ - static data, e.g. ISO language file [folder copied to dist]
views/ - THE MEAT IS HERE. html templates included from AngularJS directives, e.g. waveform for wavesurfer, tabs etc  [folder copied to dist]
src/ - THE MEAT IS HERE. Our javascript, css, root html, etc  [copied to dist/scripts and dist/css after concat and minification]
media/ - dummy audio to load [folder copied to dist]
img/ - static images and SVG icon sets folder [copied to dist]
build/ - used for temporary files in build, e.g. rebuilding of wavesurfer library

Instructions to build
---------------------

You must first install node.js for the npm package manager, and bower (npm install -g bower)

> npm install
> bower install
> gulp build (only necessary if source has been changed)
> gulp deploy

Note:

This will generate a local folder of node_modules which consists of the tools necessary to build the project such as gulp and it's plug-ins.
This will also generate a bower_components folder of the javascript dependencies. Only a small subset of these files are used, referenced from the root index.html
which you will serve (python -m http.server) to view the app direct from sources.
