This is a description of the files and directory structure of the Annoweb beta web app.

Note: Code changes are described in the changes tab in the main view.

Root files:
-----------
*bower.json - client-side dependencies specified here.
*gulpfile.js - Gulp file describes tasks for building, cleaning, etc. Currently this only specifies a way to obtain the wavesurfer library from source. It will ultimately be responsible for bundling and minifying all the scripts, running jslint and so on.
*package.json - node.js 'install', describes the dependencies to execute the gulpfile.js build file
index.html - The webapp main html, includes all of the javascript. Should be served from a web server for debugging, e.g. python -m http.server or an IDE. This file is generated by the gulp 'build' task
             from src/index.html - dependencies are automatically injected. It will include unminified sources from the src directory and libraries from bower_components
description.txt - the text used for the Chrome Web Store
background.js, manifest.json - Chrome Packaged App definitions

Directories:
------------
*bower_components/ - this is a source tree for all dependencies. Very little of this is used in the build.
*node_modules/ - node.js source modules. Unnecessary to run web app. (node install will build this locally)
dist/ - deployed app appears in this folder, generated by gulp 'deploy' task. Folder can be added as unpacked Chrome web app, or deployed to web server.
extdata/ - static data, e.g. ISO language file and localised overrides [folder copied to dist]
views/ - html templates for views, e.g. home, session, annotate
/views/templates html templates included from AngularJS directives, e.g. language selectors, wavesurfer views, annotation UIs etc.
/views/templates/help/[language] - online help system localised in the same codes as /language
/languages/[language] - Angular Translate files go here in directories named as the supported locales (defined in app.js)
src/ - Our javascript, css, root html, etc  [copied to dist/scripts and dist/css after closure compiler and css clean]
media/ - beep sounds, saisiyat song for about, demo audio from ELAN [copied to dist]
img/ - static images and SVG icon sets folder, OLAC icons and more [copied to dist]
build/ - used for temporary files in build, e.g. rebuilding of wavesurfer library
icons/ - icons for Chrome Packaged App


Instructions to build
---------------------

You must first install node.js for the npm package manager, and bower (npm install -g bower)

> npm install
> bower install
> gulp build (only necessary if src/window.html has been changed or source files have been added/removed)
> gulp deploy

Running:

It's best to run the app as a Chrome Packaged App. You can do this by going into Chrome More Tools -> Extensions and selecting
developer mode. Then click 'Load unpacked extension' and select the dist folder after performing the build and deploy steps.
Aikuma can now be launched as a Chrome App as normal.

